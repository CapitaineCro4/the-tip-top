services:
  postgres_db:
    image: postgres:15-alpine
    container_name: postgres_db-${ENV}
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-${ENV}
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@postgres_db-${ENV}:5432/mydatabase?sslmode=disable"
    depends_on:
      - postgres_db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-${ENV}
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres_db

  api:
    image: ${DOCKERHUB_USERNAME}/the-tip-top-api:latest
    container_name: api-${ENV}
    env_file: ./.env
    depends_on:
      - postgres_db

  front:
    image: ${DOCKERHUB_USERNAME}/the-tip-top-front:latest
    container_name: front-${ENV}
    env_file: ./.env
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-${ENV}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway-${ENV}
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-${ENV}
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor-${ENV}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - prometheus

volumes:
  postgres_data:
  grafana-data:
